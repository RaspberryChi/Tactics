<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Global constants
global.squareSize = 64;
global.offset = 32;

// Global variables
global.screenScale = 1;
global.curObj = undefined;
global.hoverObj = undefined;


//Create player for test
global.party[0] = instance_create(3*global.squareSize + global.offset, 3*global.squareSize + global.offset, obj_entity);

global.party[0].name = "Mark";
global.party[0].posX = 3;
global.party[0].posY = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.curObj != undefined &amp;&amp; global.curObj.entity != undefined){
    scpt_drawMelee(global.curObj.entity);
}
if(global.hoverObj != undefined &amp;&amp; global.hoverObj.entity != undefined){
    scpt_drawMove(global.hoverObj.entity);
}

// Top left text box
if(global.curObj != undefined){
    var stringList = ds_queue_create();
    
    ds_queue_enqueue(stringList, "Position: " + string(global.curObj.xPos) + ", " + string(global.curObj.yPos));
    
    if(global.curObj.entity != undefined){
        ds_queue_enqueue(stringList, "Name: " + global.curObj.entity.name);
        ds_queue_enqueue(stringList, "Job: " + global.curObj.entity.job);
    }
    
    scpt_textBox("Selected", stringsList, 150, 10, 10, global.screenScale);
}

// Top right text box
if(global.hoverObj != undefined){
    var stringList = ds_queue_create();
    
    ds_queue_enqueue(stringList, "Position: " + string(global.hoverObj.xPos) + ", " + string(global.hoverObj.yPos));
    
    if(global.hoverObj.entity != undefined){
        ds_queue_enqueue(stringsList, "Name: " + global.hoverObj.entity.name);
    }
    
    scpt_textBox("Hover", stringList, 150, room_width - 175, 10, global.screenScale);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
