<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Reset global variables
global.curObj = undefined;
global.hoverObj = undefined;

// Execute the script to make a grid
global.tileMap = scpt_generateGrid(room_width, room_height);

// Create player for test
global.tileMap[3,3].occupied = true;
global.tileMap[3,3].entity = global.party[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var mouseX, mouseY, tempObj;

// Track mouse and get object it's over
mouseX = floor(mouse_x / global.squareSize);
mouseY = floor(mouse_y / global.squareSize);
tempObj = global.tileMap[mouseX, mouseY];

// Set hovered over square
if(tempObj != global.hoverObj){
    if(global.hoverObj != global.curObj){
        global.hoverObj.image_index = 0;
    }
    if(global.hoverObj != undefined &amp;&amp; global.hoverObj.entity != undefined){
        global.hoverObj.entity.hover = false;
    }
    
    global.hoverObj = tempObj;
    
    if(global.hoverObj.entity != undefined){
        global.hoverObj.entity.hover = true;
    }
    if(tempObj != global.curObj){
        global.hoverObj.image_index = 2;
    }
}

// Set selected square
if(mouse_check_button_released(mb_left) &amp;&amp; tempObj != global.curObj){

    if(global.curObj != undefined){
        global.curObj.image_index = 0;
    }
    
    if(global.curObj != undefined &amp;&amp; global.curObj.entity != undefined){
        global.curObj.entity.selected = false;
    }
    
    global.curObj = tempObj;
    if(global.curObj.entity != undefined){
        global.curObj.entity.selected = true;
    }
    global.curObj.image_index = 1;
}

// Remove selected square
if(keyboard_check_pressed(vk_escape)){
    if(global.curObj != undefined &amp;&amp; global.curObj.entity != undefined){
        global.curObj.entity.selected = false;
    }
    global.curObj.image_index = 0;
    global.curObj = undefined;
}

// Move camera
if(keyboard_check(ord('W')) || keyboard_check(ord('w'))){
    vspeed = 0.5;
}
if(keyboard_check(ord('A')) || keyboard_check(ord('a'))){
    hspeed = -0.5;
}
if(keyboard_check(ord('S')) || keyboard_check(ord('s'))){
    vspeed = -0.5;
}
if(keyboard_check(ord('D')) || keyboard_check(ord('D'))){
    hspeed = 0.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
